# When creating a pull request we can generate
# a unique url for particular pull request.
# This url is using for test the feature, release
# or hotfix before it merge to the base branch.
#
# To manage resource carefull we must identify the action type.
# If the action type is pr created or reponed the we generate a new url,
# if the action type is syncronized then we use existing
# url to be redeployed, if the action type is PR closed we 
# delete the url.
name: Testing
on: 
  pull_request:
    types: [opened, synchronize, closed, reopened]
    branches:
      - 'develop'
      - 'main'

jobs:
  
  guess_subdomain:
    name: Guess subdomain
    runs-on: ubuntu-latest
    steps:
      - name: Generate or guess subdomain url 
        id: subdomain
        run: |
          PR_NUMBER=${{ github.event.number }}

          BRANCH=${GITHUB_HEAD_REF}
          echo "::set-output name=branch::${BRANCH}"

          BRANCH_NORMALIZED=$(echo ${BRANCH} | awk '{print tolower($0)}' | sed -e 's/\//-/g')
          SUBDOMAIN=${BRANCH_NORMALIZED}-${PR_NUMBER}
          echo "::set-output name=subdomain::${SUBDOMAIN}" 
          echo "::set-output name=url::https://${SUBDOMAIN}.fathur.com/"
    outputs:
      branch: ${{ steps.subdomain.outputs.branch }}
      subdomain: ${{ steps.subdomain.outputs.subdomain }}
      url: ${{ steps.subdomain.outputs.url }}
      gitflow_server: http://13.212.115.28

  create:
    name: Build environment 
    needs: guess_subdomain
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:

      - name: Call gitflow server
        run: |
          curl --location --request POST "${{ needs.guess_subdomain.outputs.gitflow_server }}/api/sub-domains/${{ needs.guess_subdomain.outputs.subdomain }}" \
          --header "Accept: application/json" \
          --header "Authorization: Bearer qweerrtr" \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "branch=${{ needs.guess_subdomain.outputs.branch }}" \
          --data-urlencode "pr_number=${{ github.event.number }}"

      - uses: mshick/add-pr-comment@v1
        with:
          repo-token-user-login: 'github-actions[bot]'
          repo-token: ${{ secrets.ACCESS_TOKEN }}
          message: |
            Hello, I am a bot ü§ñ. You're awesome! üéä üéâ You can now test your PR using the new environment in the URL below.

            ‚úÖ ${{ needs.guess_subdomain.outputs.url }}


  redeploy:
    name: Redeploy code changes 
    needs: guess_subdomain
    runs-on: ubuntu-latest
    if: github.event.action == 'synchronize'
    steps:
      - name: Call gitflow server
        run: |
          curl --location --request PUT "${{ needs.guess_subdomain.outputs.gitflow_server }}/api/sub-domains/${{ needs.guess_subdomain.outputs.subdomain }}" \
          --header "Accept: application/json" \
          --header "Authorization: Bearer qweerrtr" \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "branch=${{ needs.guess_subdomain.outputs.branch }}"

  destroy:
    name: Destroy environment 
    needs: guess_subdomain
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    steps:

      # When successfully merged, the base branch will updated and deployment on base branch will be activated.
      # 1. POST /sub-domains/{develop|main}
      - if: github.event.pull_request.merged == true
        name: Call gitflow server
        run: |
          curl --location --request DELETE "${{ needs.guess_subdomain.outputs.gitflow_server }}/api/sub-domains/${{ needs.guess_subdomain.outputs.subdomain }}" \
          --header "Accept: application/json" \
          --header "Authorization: Bearer qweerrtr" \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "branch=${{ needs.guess_subdomain.outputs.branch }}" \
          --data-urlencode "merged=true" \
          --data-urlencode "target_branch=developer+master"

      # 2. create message reply in comment
      # 3. create message reply sucessfully deployed, this happening on server not in github action
      - if: github.event.pull_request.merged == true
        uses: mshick/add-pr-comment@v1
        with:
          repo-token-user-login: 'github-actions[bot]'
          repo-token: ${{ secrets.ACCESS_TOKEN }}
          message: |
            Hello, I am a bot ü§ñ. Congrats! your PR successfully merged üéä üéä.
            The previous generated URL and its environment can no longer be used.

      # When closed
      # 1. POST /sub-domains/{develop|main}
      - if: github.event.pull_request.merged == false
        name: Call gitflow server
        run: |
          curl --location --request DELETE "${{ needs.guess_subdomain.outputs.gitflow_server }}/api/sub-domains/${{ needs.guess_subdomain.outputs.subdomain }}" \
          --header "Accept: application/json" \
          --header "Authorization: Bearer qweerrtr" \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "branch=${{ needs.guess_subdomain.outputs.branch }}" \
          --data-urlencode "merged=false"

      # 2. create message reply in comment
      # - if: github.event.pull_request.merged == false
      #   uses: mshick/add-pr-comment@v1
      #   with:
      #     repo-token-user-login: 'github-actions[bot]'
      #     repo-token: ${{ secrets.ACCESS_TOKEN }}
      #     message: |
      #       Hello, I am a bot ü§ñ. Sorry üò≠, because you closed the PR, the URL below and its environment can no longer be used.

      #       ‚ùå ${{ needs.guess_subdomain.outputs.url }}

      #       Re-open the PR if you need to re-activate. Or, you can also create a new PR if you want to create a brand new URL and its environment.

  
  recreate:
    name: Recreate environment 
    needs: guess_subdomain
    runs-on: ubuntu-latest
    if: github.event.action == 'reopened'
    steps:
      - name: Call gitflow server
        run: |
          curl --location --request POST "${{ needs.guess_subdomain.outputs.gitflow_server }}/api/sub-domains/${{ needs.guess_subdomain.outputs.subdomain }}" \
          --header "Accept: application/json" \
          --header "Authorization: Bearer qweerrtr" \
          --header 'Content-Type: application/x-www-form-urlencoded' \
          --data-urlencode "branch=${{ needs.guess_subdomain.outputs.branch }}"

      # - uses: mshick/add-pr-comment@v1
      #   with:
      #     repo-token-user-login: 'github-actions[bot]'
      #     repo-token: ${{ secrets.ACCESS_TOKEN }}
      #     message: |
      #       Hello, I am a bot ü§ñ. Congrats! üéâ üéä The environment is now available after you reopen the PR using the URL below.

      #       ‚úÖ ${{ needs.guess_subdomain.outputs.url }}
